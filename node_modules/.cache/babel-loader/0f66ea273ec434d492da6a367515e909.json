{"ast":null,"code":"var _jsxFileName = \"/Users/maksym/Desktop/films_app/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoading: true,\n      films: []\n    };\n\n    this.getFilms = async () => {\n      const films = await axios.get('https://yts.mx/api/v2/list_movies.json');\n    };\n  }\n\n  componentDidMount() {\n    this.getFilms();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", isLoading ? 'Загрузка..' : 'Страница загружена']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maksym/Desktop/films_app/src/App.js"],"names":["React","PropTypes","axios","App","Component","state","isLoading","films","getFilms","get","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE;AAFD,KADwB;;AAAA,SAMhCC,QANgC,GAMrB,YAAY;AACrB,YAAMD,KAAK,GAAG,MAAML,KAAK,CAACO,GAAN,CAAU,wCAAV,CAApB;AACD,KAR+B;AAAA;;AAUhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,QAAL;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBAAO;AAAA,sBAAOC,SAAS,GAAG,YAAH,GAAkB,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAhB+B;;AAmBlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    films: [],\n  };\n\n  getFilms = async () => {\n    const films = await axios.get('https://yts.mx/api/v2/list_movies.json');\n  };\n\n  componentDidMount() {\n    this.getFilms();\n  }\n  render() {\n    const { isLoading } = this.state;\n    return <div> {isLoading ? 'Загрузка..' : 'Страница загружена'}</div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}